from Structures.Expression.Expression import Expression as Expression
from _typeshed import Incomplete

class DSUObject:
    def __init__(self, _parent: DSUObject | None = None) -> None: ...
    def get_root(self) -> DSUObject: ...
    def join(self, other: DSUObject): ...

class EquivManager:
    expr_to_dsu: Incomplete
    def __init__(self) -> None: ...
    def were_found_and_equiv(self, expr1: Expression, expr2: Expression) -> bool: ...
    def add_equiv(self, expr1: Expression, expr2: Expression): ...
