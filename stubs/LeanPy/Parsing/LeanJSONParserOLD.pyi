from Structures.Environment.Declaration.Declaration import *
from Structures.Name import *
from Structures.Expression.Level import *
from Structures.Expression.Expression import *
from _typeshed import Incomplete
from typing import Any, TypeVar

tag_to_level_class: Incomplete
tag_to_expr_class: Incomplete
JSON_TYPE: Incomplete

def getObj(tag: str, args: dict[str, Any]) -> Any: ...
def deserialize_expr_le(json_obj: dict[str, 'JSON_TYPE'], subexprs: list[Expression | None]) -> Expression | Level: ...
def deserialize_lean_object(init_json_obj: dict[str, 'JSON_TYPE']) -> Any: ...
T = TypeVar('T')

def deserialize_list(json_list: list[JSON_TYPE]): ...
def deserialize_json(json_obj: JSON_TYPE) -> Any: ...
def deserialize_declaration_profile(json_obj: JSON_TYPE) -> tuple[list[str], Declaration]: ...
def from_file(file_path: str) -> tuple[list[str], Declaration]: ...
