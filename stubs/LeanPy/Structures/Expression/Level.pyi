from Structures.Name import Name
from _typeshed import Incomplete

__all__ = ['Level', 'LevelZero', 'LevelSucc', 'LevelMax', 'LevelIMax', 'LevelParam', 'level_constructors']

class Level:
    def totally_equal(self, other: Level) -> bool: ...
    hash: Incomplete
    def __hash__(self) -> int: ...
    def get_hash(self) -> int: ...
    def clone(self) -> Level: ...

class LevelZero(Level):
    def totally_equal(self, other: Level) -> bool: ...
    def get_hash(self) -> int: ...
    def clone(self): ...

class LevelSucc(Level):
    anc: Incomplete
    def __init__(self, anc: Level) -> None: ...
    def totally_equal(self, other: Level) -> bool: ...
    def get_hash(self) -> int: ...
    def clone(self): ...

class LevelMax(Level):
    lhs: Incomplete
    rhs: Incomplete
    def __init__(self, lhs: Level, rhs: Level) -> None: ...
    def totally_equal(self, other: Level) -> bool: ...
    def get_hash(self) -> int: ...
    def clone(self): ...

class LevelIMax(Level):
    lhs: Incomplete
    rhs: Incomplete
    def __init__(self, lhs: Level, rhs: Level) -> None: ...
    def totally_equal(self, other: Level) -> bool: ...
    def get_hash(self) -> int: ...
    def clone(self): ...

class LevelParam(Level):
    pname: Incomplete
    def __init__(self, pname: Name) -> None: ...
    def totally_equal(self, other: Level) -> bool: ...
    def get_hash(self) -> int: ...
    def clone(self): ...

level_constructors: Incomplete
