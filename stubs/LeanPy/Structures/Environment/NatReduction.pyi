from Structures.Expression.Expression import NatLit
from typing import Callable

__all__ = ['nat_add', 'nat_sub', 'nat_mul', 'nat_pow', 'nat_gcd', 'nat_mod', 'nat_div', 'nat_beq', 'nat_ble', 'nat_land', 'nat_lor', 'nat_xor', 'nat_shiftl', 'nat_shiftr', 'reduce_bin_nat_op']

def nat_add(a: int, b: int) -> int: ...
def nat_sub(a: int, b: int) -> int: ...
def nat_mul(a: int, b: int) -> int: ...
def nat_pow(a: int, b: int) -> int: ...
def nat_gcd(a: int, b: int) -> int: ...
def nat_mod(a: int, b: int) -> int: ...
def nat_div(a: int, b: int) -> int: ...
def nat_beq(a: int, b: int) -> bool: ...
def nat_ble(a: int, b: int) -> bool: ...
def nat_land(a: int, b: int) -> int: ...
def nat_lor(a: int, b: int) -> int: ...
def nat_xor(a: int, b: int) -> int: ...
def nat_shiftl(a: int, b: int) -> int: ...
def nat_shiftr(a: int, b: int) -> int: ...
def reduce_bin_nat_op(op: Callable[[int, int], int], arg1: int, arg2: int) -> NatLit: ...
