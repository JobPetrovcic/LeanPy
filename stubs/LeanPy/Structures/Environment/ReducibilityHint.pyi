import abc
from _typeshed import Incomplete
from abc import abstractmethod

__all__ = ['ReducibilityHint', 'OpaqueHint', 'Regular', 'Abbrev']

class ReducibilityHint(metaclass=abc.ABCMeta):
    @abstractmethod
    def get_height(self) -> int: ...

class OpaqueHint(ReducibilityHint):
    def __init__(self) -> None: ...
    def get_height(self): ...

class Regular(ReducibilityHint):
    depth: Incomplete
    def __init__(self, depth: int) -> None: ...
    def get_height(self): ...

class Abbrev(ReducibilityHint):
    def __init__(self) -> None: ...
    def get_height(self): ...
