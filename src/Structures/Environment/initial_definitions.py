from Structures.Name import *
from Structures.Expression.Level import *
from Structures.Expression.Expression import *
from Structures.Environment.Declaration.Declaration import *
from Structures.Environment.ReducibilityHint import *
          
from Structures.Environment.Environment import Environment
          

def init_basic_definitions(env : Environment):
	_name = Anonymous()
	MyNat_name = SubName(anc=_name, name='MyNat')
	MyNat_zero_name = SubName(anc=MyNat_name, name='zero')
	MyNat_succ_name = SubName(anc=MyNat_name, name='succ')
	MyNat_name_info_type_lvl1_anc = LevelZero()
	MyNat_name_info_type_lvl1 = LevelSucc(anc=MyNat_name_info_type_lvl1_anc)
	MyNat_name_info_type = Sort(level=MyNat_name_info_type_lvl1)
	decl_MyNat = InductiveType(info=DeclarationInfo(name=MyNat_name, lvl_params=[], type=MyNat_name_info_type), is_recursive=True, num_params=0, num_indices=0, all_inductive_names=[MyNat_name], constructor_names=[MyNat_zero_name, MyNat_succ_name])
	env.add_declaration(MyNat_name, decl_MyNat)
	
	MyNat_zero_name_info_type = Const(name=MyNat_name, lvl_params=[])
	decl_MyNat_zero = Constructor(info=DeclarationInfo(name=MyNat_zero_name, lvl_params=[], type=MyNat_zero_name_info_type), inductive_name=MyNat_name, num_params=0, num_fields=0)
	env.add_declaration(MyNat_zero_name, decl_MyNat_zero)
	
	a_name = SubName(anc=_name, name='a')
	a__at_name = SubName(anc=a_name, name='_@')
	a__at_TestProject_name = SubName(anc=a__at_name, name='TestProject')
	a__at_TestProject_Basic_name = SubName(anc=a__at_TestProject_name, name='Basic')
	a__at_TestProject_Basic__hyg_name = SubName(anc=a__at_TestProject_Basic_name, name='_hyg')
	a__at_TestProject_Basic__hyg_6_name = SubName(anc=a__at_TestProject_Basic__hyg_name, name='6')
	MyNat_succ_name_info_type = Pi(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Const(name=MyNat_name, lvl_params=[]))
	decl_MyNat_succ = Constructor(info=DeclarationInfo(name=MyNat_succ_name, lvl_params=[], type=MyNat_succ_name_info_type), inductive_name=MyNat_name, num_params=0, num_fields=1)
	env.add_declaration(MyNat_succ_name, decl_MyNat_succ)
	
	motive_name = SubName(anc=_name, name='motive')
	t_name = SubName(anc=_name, name='t')
	u_name = SubName(anc=_name, name='u')
	decl_MyNat_rec_rec_rule0_rec_rule_lvl2 = LevelParam(name=u_name)
	zero_name = SubName(anc=_name, name='zero')
	succ_name = SubName(anc=_name, name='succ')
	a_ih_name = SubName(anc=_name, name='a_ih')
	a_ih__at_name = SubName(anc=a_ih_name, name='_@')
	a_ih__at_TestProject_name = SubName(anc=a_ih__at_name, name='TestProject')
	a_ih__at_TestProject_Basic_name = SubName(anc=a_ih__at_TestProject_name, name='Basic')
	a_ih__at_TestProject_Basic__hyg_name = SubName(anc=a_ih__at_TestProject_Basic_name, name='_hyg')
	a_ih__at_TestProject_Basic__hyg_6_name = SubName(anc=a_ih__at_TestProject_Basic__hyg_name, name='6')
	decl_MyNat_rec_rec_rule0_rec_rule = Lambda(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body=Lambda(bname=zero_name, arg_type=App(fn=BVar(dbj_id=0), arg=Const(name=MyNat_zero_name, lvl_params=[])), body=Lambda(bname=succ_name, arg_type=Pi(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Pi(bname=a_ih__at_TestProject_Basic__hyg_6_name, arg_type=App(fn=BVar(dbj_id=2), arg=BVar(dbj_id=0)), body_type=App(fn=BVar(dbj_id=3), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=1))))), body=BVar(dbj_id=1))))
	MyNat_rec_name = SubName(anc=MyNat_name, name='rec')
	decl_MyNat_rec_rec_rule1_rec_rule = Lambda(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body=Lambda(bname=zero_name, arg_type=App(fn=BVar(dbj_id=0), arg=Const(name=MyNat_zero_name, lvl_params=[])), body=Lambda(bname=succ_name, arg_type=Pi(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Pi(bname=a_ih__at_TestProject_Basic__hyg_6_name, arg_type=App(fn=BVar(dbj_id=2), arg=BVar(dbj_id=0)), body_type=App(fn=BVar(dbj_id=3), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=1))))), body=Lambda(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=App(fn=App(fn=BVar(dbj_id=1), arg=BVar(dbj_id=0)), arg=App(fn=App(fn=App(fn=App(fn=Const(name=MyNat_rec_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2]), arg=BVar(dbj_id=3)), arg=BVar(dbj_id=2)), arg=BVar(dbj_id=1)), arg=BVar(dbj_id=0)))))))
	MyNat_rec_name_lvlparam0 = LevelParam(name=u_name)
	MyNat_rec_name_info_type = Pi(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body_type=Pi(bname=zero_name, arg_type=App(fn=BVar(dbj_id=0), arg=Const(name=MyNat_zero_name, lvl_params=[])), body_type=Pi(bname=succ_name, arg_type=Pi(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Pi(bname=a_ih__at_TestProject_Basic__hyg_6_name, arg_type=App(fn=BVar(dbj_id=2), arg=BVar(dbj_id=0)), body_type=App(fn=BVar(dbj_id=3), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=1))))), body_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=App(fn=BVar(dbj_id=3), arg=BVar(dbj_id=0))))))
	decl_MyNat_rec = Recursor(info=DeclarationInfo(name=MyNat_rec_name, lvl_params=[MyNat_rec_name_lvlparam0], type=MyNat_rec_name_info_type), num_params=0, num_indices=0, num_motives=1, num_minors=2, recursion_rules=[RecursionRule(constructor=MyNat_zero_name, num_fields=0, value=decl_MyNat_rec_rec_rule0_rec_rule), RecursionRule(constructor=MyNat_succ_name, num_fields=1, value=decl_MyNat_rec_rec_rule1_rec_rule)], isK=True)
	env.add_declaration(MyNat_rec_name, decl_MyNat_rec)
	
	PUnit_name = SubName(anc=_name, name='PUnit')
	PUnit_unit_name = SubName(anc=PUnit_name, name='unit')
	PUnit_name_lvlparam0 = LevelParam(name=u_name)
	PUnit_name_info_type = Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)
	decl_PUnit = InductiveType(info=DeclarationInfo(name=PUnit_name, lvl_params=[PUnit_name_lvlparam0], type=PUnit_name_info_type), is_recursive=True, num_params=0, num_indices=0, all_inductive_names=[PUnit_name], constructor_names=[PUnit_unit_name])
	env.add_declaration(PUnit_name, decl_PUnit)
	
	PProd_name = SubName(anc=_name, name='PProd')
	PProd_mk_name = SubName(anc=PProd_name, name='mk')
	PProd_name_lvlparam0 = LevelParam(name=u_name)
	v_name = SubName(anc=_name, name='v')
	PProd_name_lvlparam1 = LevelParam(name=v_name)
	α_name = SubName(anc=_name, name='α')
	β_name = SubName(anc=_name, name='β')
	PProd_name_info_type_lvl7 = LevelParam(name=v_name)
	PProd_name_info_type_lvl8_lhs = LevelMax(lhs=MyNat_name_info_type_lvl1, rhs=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)
	PProd_name_info_type_lvl8 = LevelMax(lhs=PProd_name_info_type_lvl8_lhs, rhs=PProd_name_info_type_lvl7)
	PProd_name_info_type = Pi(bname=α_name, arg_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2), body_type=Pi(bname=β_name, arg_type=Sort(level=PProd_name_info_type_lvl7), body_type=Sort(level=PProd_name_info_type_lvl8)))
	decl_PProd = InductiveType(info=DeclarationInfo(name=PProd_name, lvl_params=[PProd_name_lvlparam0, PProd_name_lvlparam1], type=PProd_name_info_type), is_recursive=True, num_params=2, num_indices=0, all_inductive_names=[PProd_name], constructor_names=[PProd_mk_name])
	env.add_declaration(PProd_name, decl_PProd)
	
	MyNat_below_name = SubName(anc=MyNat_name, name='below')
	MyNat_below_name_lvlparam0 = LevelParam(name=u_name)
	MyNat_below_name_info_type = Pi(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=PProd_name_info_type_lvl8_lhs)))
	decl_MyNat_below_value_lvl0 = LevelSucc(anc=PProd_name_info_type_lvl8_lhs)
	decl_MyNat_below_value = Lambda(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body=Lambda(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=App(fn=App(fn=App(fn=App(fn=Const(name=MyNat_rec_name, lvl_params=[decl_MyNat_below_value_lvl0]), arg=Lambda(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Sort(level=PProd_name_info_type_lvl8_lhs))), arg=Const(name=PUnit_name, lvl_params=[PProd_name_info_type_lvl8_lhs])), arg=Lambda(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Lambda(bname=a_ih__at_TestProject_Basic__hyg_6_name, arg_type=Sort(level=PProd_name_info_type_lvl8_lhs), body=App(fn=App(fn=Const(name=PProd_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2, PProd_name_info_type_lvl8_lhs]), arg=App(fn=BVar(dbj_id=3), arg=BVar(dbj_id=1))), arg=BVar(dbj_id=0))))), arg=BVar(dbj_id=0))))
	decl_MyNat_below = Definition(info=DeclarationInfo(name=MyNat_below_name, lvl_params=[MyNat_below_name_lvlparam0], type=MyNat_below_name_info_type), value=decl_MyNat_below_value, hint= Abbrev())
	env.add_declaration(MyNat_below_name, decl_MyNat_below)
	
	PProd_mk_name_lvlparam0 = LevelParam(name=u_name)
	PProd_mk_name_lvlparam1 = LevelParam(name=v_name)
	fst_name = SubName(anc=_name, name='fst')
	snd_name = SubName(anc=_name, name='snd')
	PProd_mk_name_info_type = Pi(bname=α_name, arg_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2), body_type=Pi(bname=β_name, arg_type=Sort(level=PProd_name_info_type_lvl7), body_type=Pi(bname=fst_name, arg_type=BVar(dbj_id=1), body_type=Pi(bname=snd_name, arg_type=BVar(dbj_id=1), body_type=App(fn=App(fn=Const(name=PProd_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2, PProd_name_info_type_lvl7]), arg=BVar(dbj_id=3)), arg=BVar(dbj_id=2))))))
	decl_PProd_mk = Constructor(info=DeclarationInfo(name=PProd_mk_name, lvl_params=[PProd_mk_name_lvlparam0, PProd_mk_name_lvlparam1], type=PProd_mk_name_info_type), inductive_name=PProd_name, num_params=2, num_fields=2)
	env.add_declaration(PProd_mk_name, decl_PProd_mk)
	
	PUnit_unit_name_lvlparam0 = LevelParam(name=u_name)
	PUnit_unit_name_info_type = Const(name=PUnit_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2])
	decl_PUnit_unit = Constructor(info=DeclarationInfo(name=PUnit_unit_name, lvl_params=[PUnit_unit_name_lvlparam0], type=PUnit_unit_name_info_type), inductive_name=PUnit_name, num_params=0, num_fields=0)
	env.add_declaration(PUnit_unit_name, decl_PUnit_unit)
	
	MyNat_brecOn_name = SubName(anc=MyNat_name, name='brecOn')
	MyNat_brecOn_name_lvlparam0 = LevelParam(name=u_name)
	F_1_name = SubName(anc=_name, name='F_1')
	f_name = SubName(anc=_name, name='f')
	MyNat_brecOn_name_info_type = Pi(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Pi(bname=F_1_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Pi(bname=f_name, arg_type=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2]), arg=BVar(dbj_id=2)), arg=BVar(dbj_id=0)), body_type=App(fn=BVar(dbj_id=3), arg=BVar(dbj_id=1)))), body_type=App(fn=BVar(dbj_id=2), arg=BVar(dbj_id=1)))))
	decl_MyNat_brecOn_value = Lambda(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body=Lambda(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Lambda(bname=F_1_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Pi(bname=f_name, arg_type=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2]), arg=BVar(dbj_id=2)), arg=BVar(dbj_id=0)), body_type=App(fn=BVar(dbj_id=3), arg=BVar(dbj_id=1)))), body=Proj(type_name=PProd_name, index=0, struct=App(fn=App(fn=App(fn=App(fn=Const(name=MyNat_rec_name, lvl_params=[PProd_name_info_type_lvl8_lhs]), arg=Lambda(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=App(fn=App(fn=Const(name=PProd_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2, PProd_name_info_type_lvl8_lhs]), arg=App(fn=BVar(dbj_id=3), arg=BVar(dbj_id=0))), arg=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2]), arg=BVar(dbj_id=3)), arg=BVar(dbj_id=0))))), arg=App(fn=App(fn=App(fn=App(fn=Const(name=PProd_mk_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2, PProd_name_info_type_lvl8_lhs]), arg=App(fn=BVar(dbj_id=2), arg=Const(name=MyNat_zero_name, lvl_params=[]))), arg=Const(name=PUnit_name, lvl_params=[PProd_name_info_type_lvl8_lhs])), arg=App(fn=App(fn=BVar(dbj_id=0), arg=Const(name=MyNat_zero_name, lvl_params=[])), arg=Const(name=PUnit_unit_name, lvl_params=[PProd_name_info_type_lvl8_lhs]))), arg=Const(name=PUnit_unit_name, lvl_params=[PProd_name_info_type_lvl8_lhs]))), arg=Lambda(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Lambda(bname=a_ih__at_TestProject_Basic__hyg_6_name, arg_type=App(fn=App(fn=Const(name=PProd_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2, PProd_name_info_type_lvl8_lhs]), arg=App(fn=BVar(dbj_id=3), arg=BVar(dbj_id=0))), arg=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2]), arg=BVar(dbj_id=3)), arg=BVar(dbj_id=0))), body=App(fn=App(fn=App(fn=App(fn=Const(name=PProd_mk_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2, PProd_name_info_type_lvl8_lhs]), arg=App(fn=BVar(dbj_id=4), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=1)))), arg=App(fn=App(fn=Const(name=PProd_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2, PProd_name_info_type_lvl8_lhs]), arg=App(fn=BVar(dbj_id=4), arg=BVar(dbj_id=1))), arg=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2]), arg=BVar(dbj_id=4)), arg=BVar(dbj_id=1)))), arg=App(fn=App(fn=BVar(dbj_id=2), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=1))), arg=BVar(dbj_id=0))), arg=BVar(dbj_id=0))))), arg=BVar(dbj_id=1))))))
	decl_MyNat_brecOn = Definition(info=DeclarationInfo(name=MyNat_brecOn_name, lvl_params=[MyNat_brecOn_name_lvlparam0], type=MyNat_brecOn_name_info_type), value=decl_MyNat_brecOn_value, hint= Abbrev())
	env.add_declaration(MyNat_brecOn_name, decl_MyNat_brecOn)
	
	Unit_name = SubName(anc=_name, name='Unit')
	decl_Unit_value = Const(name=PUnit_name, lvl_params=[MyNat_name_info_type_lvl1])
	decl_Unit = Definition(info=DeclarationInfo(name=Unit_name, lvl_params=[], type=MyNat_name_info_type), value=decl_Unit_value, hint= Abbrev())
	env.add_declaration(Unit_name, decl_Unit)
	
	MyNat_casesOn_name = SubName(anc=MyNat_name, name='casesOn')
	MyNat_casesOn_name_lvlparam0 = LevelParam(name=u_name)
	MyNat_casesOn_name_info_type = Pi(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Pi(bname=zero_name, arg_type=App(fn=BVar(dbj_id=1), arg=Const(name=MyNat_zero_name, lvl_params=[])), body_type=Pi(bname=succ_name, arg_type=Pi(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=App(fn=BVar(dbj_id=3), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=0)))), body_type=App(fn=BVar(dbj_id=3), arg=BVar(dbj_id=2))))))
	decl_MyNat_casesOn_value = Lambda(bname=motive_name, arg_type=Pi(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=decl_MyNat_rec_rec_rule0_rec_rule_lvl2)), body=Lambda(bname=t_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Lambda(bname=zero_name, arg_type=App(fn=BVar(dbj_id=1), arg=Const(name=MyNat_zero_name, lvl_params=[])), body=Lambda(bname=succ_name, arg_type=Pi(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=App(fn=BVar(dbj_id=3), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=0)))), body=App(fn=App(fn=App(fn=App(fn=Const(name=MyNat_rec_name, lvl_params=[decl_MyNat_rec_rec_rule0_rec_rule_lvl2]), arg=BVar(dbj_id=3)), arg=BVar(dbj_id=1)), arg=Lambda(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Lambda(bname=a_ih__at_TestProject_Basic__hyg_6_name, arg_type=App(fn=BVar(dbj_id=4), arg=BVar(dbj_id=0)), body=App(fn=BVar(dbj_id=2), arg=BVar(dbj_id=1))))), arg=BVar(dbj_id=2))))))
	decl_MyNat_casesOn = Definition(info=DeclarationInfo(name=MyNat_casesOn_name, lvl_params=[MyNat_casesOn_name_lvlparam0], type=MyNat_casesOn_name_info_type), value=decl_MyNat_casesOn_value, hint= Abbrev())
	env.add_declaration(MyNat_casesOn_name, decl_MyNat_casesOn)
	
	Unit_unit_name = SubName(anc=Unit_name, name='unit')
	Unit_unit_name_info_type = Const(name=Unit_name, lvl_params=[])
	decl_Unit_unit_value = Const(name=PUnit_unit_name, lvl_params=[MyNat_name_info_type_lvl1])
	decl_Unit_unit = Definition(info=DeclarationInfo(name=Unit_unit_name, lvl_params=[], type=Unit_unit_name_info_type), value=decl_Unit_unit_value, hint= Abbrev())
	env.add_declaration(Unit_unit_name, decl_Unit_unit)
	
	double_name = SubName(anc=_name, name='double')
	double_match_1_name = SubName(anc=double_name, name='match_1')
	u_1_name = SubName(anc=_name, name='u_1')
	double_match_1_name_lvlparam0 = LevelParam(name=u_1_name)
	x_name = SubName(anc=_name, name='x')
	x__at_name = SubName(anc=x_name, name='_@')
	x__at_TestProject_name = SubName(anc=x__at_name, name='TestProject')
	x__at_TestProject_Basic_name = SubName(anc=x__at_TestProject_name, name='Basic')
	x__at_TestProject_Basic__hyg_name = SubName(anc=x__at_TestProject_Basic_name, name='_hyg')
	x__at_TestProject_Basic__hyg_38_name = SubName(anc=x__at_TestProject_Basic__hyg_name, name='38')
	double_match_1_name_info_type_lvl20 = LevelParam(name=u_1_name)
	h_1_name = SubName(anc=_name, name='h_1')
	double_match_1_name_info_type = Pi(bname=motive_name, arg_type=Pi(bname=x__at_TestProject_Basic__hyg_38_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=double_match_1_name_info_type_lvl20)), body_type=Pi(bname=x__at_TestProject_Basic__hyg_38_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Pi(bname=h_1_name, arg_type=Pi(bname=_name, arg_type=Const(name=Unit_name, lvl_params=[]), body_type=App(fn=BVar(dbj_id=2), arg=Const(name=MyNat_zero_name, lvl_params=[]))), body_type=Pi(bname=succ_name, arg_type=Pi(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=App(fn=BVar(dbj_id=3), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=0)))), body_type=App(fn=BVar(dbj_id=3), arg=BVar(dbj_id=2))))))
	h_2_name = SubName(anc=_name, name='h_2')
	a__at_TestProject_Basic__hyg_6_55_name = SubName(anc=a__at_TestProject_Basic__hyg_6_name, name='55')
	decl_double_match_1_value = Lambda(bname=motive_name, arg_type=Pi(bname=x__at_TestProject_Basic__hyg_38_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=Sort(level=double_match_1_name_info_type_lvl20)), body=Lambda(bname=x__at_TestProject_Basic__hyg_38_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Lambda(bname=h_1_name, arg_type=Pi(bname=_name, arg_type=Const(name=Unit_name, lvl_params=[]), body_type=App(fn=BVar(dbj_id=2), arg=Const(name=MyNat_zero_name, lvl_params=[]))), body=Lambda(bname=h_2_name, arg_type=Pi(bname=a__at_TestProject_Basic__hyg_6_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body_type=App(fn=BVar(dbj_id=3), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=0)))), body=App(fn=App(fn=App(fn=App(fn=Const(name=MyNat_casesOn_name, lvl_params=[double_match_1_name_info_type_lvl20]), arg=Lambda(bname=x_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=App(fn=BVar(dbj_id=4), arg=BVar(dbj_id=0)))), arg=BVar(dbj_id=2)), arg=App(fn=BVar(dbj_id=1), arg=Const(name=Unit_unit_name, lvl_params=[]))), arg=Lambda(bname=a__at_TestProject_Basic__hyg_6_55_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=App(fn=BVar(dbj_id=1), arg=BVar(dbj_id=0))))))))
	decl_double_match_1 = Definition(info=DeclarationInfo(name=double_match_1_name, lvl_params=[double_match_1_name_lvlparam0], type=double_match_1_name_info_type), value=decl_double_match_1_value, hint= Abbrev())
	env.add_declaration(double_match_1_name, decl_double_match_1)
	
	x__at_TestProject_Basic__hyg_56_name = SubName(anc=x__at_TestProject_Basic__hyg_name, name='56')
	n_name = SubName(anc=_name, name='n')
	decl_double_value = Lambda(bname=x_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=App(fn=App(fn=App(fn=Const(name=MyNat_brecOn_name, lvl_params=[MyNat_name_info_type_lvl1]), arg=Lambda(bname=x_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Const(name=MyNat_name, lvl_params=[]))), arg=BVar(dbj_id=0)), arg=Lambda(bname=x_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Lambda(bname=f_name, arg_type=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[MyNat_name_info_type_lvl1]), arg=Lambda(bname=x_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Const(name=MyNat_name, lvl_params=[]))), arg=BVar(dbj_id=0)), body=App(fn=App(fn=App(fn=App(fn=App(fn=Const(name=double_match_1_name, lvl_params=[MyNat_name_info_type_lvl1]), arg=Lambda(bname=x__at_TestProject_Basic__hyg_38_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Pi(bname=x__at_TestProject_Basic__hyg_56_name, arg_type=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[MyNat_name_info_type_lvl1]), arg=Lambda(bname=x_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Const(name=MyNat_name, lvl_params=[]))), arg=BVar(dbj_id=0)), body_type=Const(name=MyNat_name, lvl_params=[])))), arg=BVar(dbj_id=1)), arg=Lambda(bname=_name, arg_type=Const(name=Unit_name, lvl_params=[]), body=Lambda(bname=x__at_TestProject_Basic__hyg_56_name, arg_type=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[MyNat_name_info_type_lvl1]), arg=Lambda(bname=x_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Const(name=MyNat_name, lvl_params=[]))), arg=Const(name=MyNat_zero_name, lvl_params=[])), body=Const(name=MyNat_zero_name, lvl_params=[])))), arg=Lambda(bname=n_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Lambda(bname=x__at_TestProject_Basic__hyg_56_name, arg_type=App(fn=App(fn=Const(name=MyNat_below_name, lvl_params=[MyNat_name_info_type_lvl1]), arg=Lambda(bname=x_name, arg_type=Const(name=MyNat_name, lvl_params=[]), body=Const(name=MyNat_name, lvl_params=[]))), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=BVar(dbj_id=0))), body=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=App(fn=Const(name=MyNat_succ_name, lvl_params=[]), arg=Proj(type_name=PProd_name, index=0, struct=BVar(dbj_id=0))))))), arg=BVar(dbj_id=0))))))
	decl_double = Definition(info=DeclarationInfo(name=double_name, lvl_params=[], type=MyNat_succ_name_info_type), value=decl_double_value, hint= Regular(depth=1))
	env.add_declaration(double_name, decl_double)
	
